name: jt-web-pipeline

on:
  push:
  pull_request:

jobs:
  build:
    name: GitHub Actions Building Application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm install
    - name: Done
      run: echo "CI pipeline completed for push to branch"
  
  # Commented out since not used it for a while, you can setup with your own credentials
  # deploy-preview:
  #   name: GitHub Actions Vercel Preview Deployment
  #   runs-on: ubuntu-latest
  #   env:
  #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #   needs: build
  #   if: (github.event_name == 'push' && github.ref == 'refs/heads/development')
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@canary
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Build Project Artifacts
  #       run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Deploy Project Artifacts to Vercel
  #       run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  # deploy-production:
  #   name: GitHub Actions Vercel Production Deployment
  #   runs-on: ubuntu-latest
  #   env:
  #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #   needs: build
  #   if: (github.event_name == 'push' && github.ref == 'refs/heads/master')
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@canary
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Build Project Artifacts
  #       run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Deploy Project Artifacts to Vercel
  #       run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}